on: [push]
jobs:
  deploy-db:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: ghactionsaks.azurecr.io
        username: ${{ secrets.acr_ghactionsaks_username }}
        password: ${{ secrets.acr_ghactionsaks_password }}
    
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: ${{ secrets.aks_actionsaks_kubeConfig }}
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep actions-aks | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace actions-aks`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: actions-aks
        container-registry-url: ghactionsaks.azurecr.io
        container-registry-username: ${{ secrets.acr_ghactionsaks_username }}
        container-registry-password: ${{ secrets.acr_ghactionsaks_password }}
        secret-name: actionsaksdockerauth
       
    - uses: azure/k8s-deploy@v1.2
      with:
        namespace: actions-aks
        manifests: |
          manifests/pvc-db.yml
          manifests/deployment-db.yml
          manifests/service-db.yml
        images: |
          ghactionsaks.azurecr.io/web:${{ github.sha }}
        imagepullsecrets: |
          actionsaksdockerauth

  build-and-deploy-web:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: ghactionsaks.azurecr.io
        username: ${{ secrets.acr_ghactionsaks_username }}
        password: ${{ secrets.acr_ghactionsaks_password }}
    
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE" -f  "src/Web/Dockerfile" -t ghactionsaks.azurecr.io/web:${{ github.sha }} --label dockerfile-path=src/Web/Dockerfile
        docker push ghactionsaks.azurecr.io/web:${{ github.sha }}
    
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: ${{ secrets.aks_actionsaks_kubeConfig }}
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep actions-aks | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace actions-aks`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: actions-aks
        container-registry-url: ghactionsaks.azurecr.io
        container-registry-username: ${{ secrets.acr_ghactionsaks_username }}
        container-registry-password: ${{ secrets.acr_ghactionsaks_password }}
        secret-name: actionsaksdockerauth
       
    - uses: azure/k8s-deploy@v1.2
      with:
        namespace: actions-aks
        manifests: |
          manifests/deployment-web.yml
          manifests/service-web.yml
          manifests/ingress-web.yml
        images: |
          ghactionsaks.azurecr.io/web:${{ github.sha }}
        imagepullsecrets: |
          actionsaksdockerauth
          
  build-and-deploy-api:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@master
    
    - uses: azure/docker-login@v1
      with:
        login-server: ghactionsaks.azurecr.io
        username: ${{ secrets.acr_ghactionsaks_username }}
        password: ${{ secrets.acr_ghactionsaks_password }}
    
    - name: Build and push image to ACR
      id: build-image
      run: |
        docker build "$GITHUB_WORKSPACE" -f  "src/PublicApi/Dockerfile" -t ghactionsaks.azurecr.io/publicapi:${{ github.sha }} --label dockerfile-path=src/PublicApi/Dockerfile
        docker push ghactionsaks.azurecr.io/publicapi:${{ github.sha }}
    
    - uses: azure/k8s-set-context@v1
      with:
         kubeconfig: ${{ secrets.aks_actionsaks_kubeConfig }}
      id: login
    
    - name: Create namespace
      run: |
        namespacePresent=`kubectl get namespace | grep actions-aks | wc -l`
        if [ $namespacePresent -eq 0 ]
        then
            echo `kubectl create namespace actions-aks`
        fi

    - uses: azure/k8s-create-secret@v1
      with:
        namespace: actions-aks
        container-registry-url: ghactionsaks.azurecr.io
        container-registry-username: ${{ secrets.acr_ghactionsaks_username }}
        container-registry-password: ${{ secrets.acr_ghactionsaks_password }}
        secret-name: actionsaksdockerauth
       
    - uses: azure/k8s-deploy@v1.2
      with:
        namespace: actions-aks
        manifests: |
          manifests/deployment-api.yml
          manifests/service-api.yml
        images: |
          ghactionsaks.azurecr.io/publicapi:${{ github.sha }}
        imagepullsecrets: |
          actionsaksdockerauth
